name: Security Checks

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]
  schedule:
    # Roda todo dia √†s 2AM para verificar novas vulnerabilidades
    - cron: '0 2 * * *'

jobs:
  security:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    # Verifica vulnerabilidades em depend√™ncias
    - name: Run npm audit
      run: |
        npm audit --production
        npm audit fix --force || true
    
    # Verifica se h√° secrets no c√≥digo
    - name: Check for secrets
      uses: trufflesecurity/trufflehog@main
      with:
        path: ./
        base: main
        head: HEAD
    
    # An√°lise de seguran√ßa do c√≥digo
    - name: Run CodeQL Analysis
      uses: github/codeql-action/analyze@v2
      with:
        languages: javascript
    
    # Verifica headers de seguran√ßa
    - name: Security Headers Check
      run: |
        echo "Verificando headers de seguran√ßa..."
        grep -r "helmet" server.js || echo "‚ö†Ô∏è Helmet n√£o encontrado!"
        grep -r "rate.*limit" server.js || echo "‚ö†Ô∏è Rate limiting n√£o encontrado!"
        grep -r "cors" server.js || echo "‚ö†Ô∏è CORS n√£o configurado!"
    
    # Verifica se .env est√° no gitignore
    - name: Check .env protection
      run: |
        if [ -f .env ]; then
          echo "‚ùå ERRO CR√çTICO: .env encontrado no reposit√≥rio!"
          exit 1
        fi
        grep "^\.env$" .gitignore || echo "‚ö†Ô∏è .env n√£o est√° no .gitignore!"
    
    # Testa se h√° SQL injection vulnerabilities
    - name: SQL Injection Check
      run: |
        echo "Verificando prote√ß√£o contra SQL Injection..."
        grep -r "db.exec\|db.run" --include="*.js" . | grep -v "?" && echo "‚ö†Ô∏è Poss√≠vel SQL Injection!" || echo "‚úÖ Queries parametrizadas"
    
    # Notifica se encontrar problemas cr√≠ticos
    - name: Notify on failure
      if: failure()
      run: |
        echo "üö® PROBLEMAS DE SEGURAN√áA DETECTADOS!"
        echo "Verifique o log acima para detalhes."