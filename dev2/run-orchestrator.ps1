# run-orchestrator.ps1
# Script para executar o orquestrador de produ√ß√£o com configura√ß√£o completa

param(
    [switch]$TestOnly,
    [switch]$Deploy,
    [switch]$Monitor,
    [int]$MaxIterations = 10
)

$ErrorActionPreference = "Stop"
$ProjectDir = Get-Location
$ConfigFile = "agents.json"
$LogDir = "orchestrator-logs"

# Criar diret√≥rio de logs
if (-not (Test-Path $LogDir)) {
    New-Item -ItemType Directory -Path $LogDir | Out-Null
}

# Fun√ß√£o de log
function Write-Log {
    param([string]$Message, [string]$Level = "INFO")
    $timestamp = Get-Date -Format "yyyy-MM-dd HH:mm:ss"
    $logMessage = "[$timestamp] [$Level] $Message"
    Write-Host $logMessage -ForegroundColor $(if ($Level -eq "ERROR") {"Red"} elseif ($Level -eq "WARN") {"Yellow"} else {"Green"})
    Add-Content -Path "$LogDir\orchestrator-$(Get-Date -Format 'yyyy-MM-dd').log" -Value $logMessage
}

# Verificar configura√ß√£o
if (-not (Test-Path $ConfigFile)) {
    Write-Log "Arquivo de configura√ß√£o $ConfigFile n√£o encontrado!" "ERROR"
    exit 1
}

Write-Log "========================================="
Write-Log "üéØ ORQUESTRADOR DE PRODU√á√ÉO EDITALIZA"
Write-Log "========================================="
Write-Log "Configura√ß√£o: $ConfigFile"
Write-Log "M√°ximo de itera√ß√µes: $MaxIterations"
Write-Log "Modo: $(if ($TestOnly) {'TESTE APENAS'} elseif ($Deploy) {'DEPLOY AUTOM√ÅTICO'} else {'MONITORAMENTO'})"

# Teste de conectividade
Write-Log "Testando conectividade com produ√ß√£o..."
$testResult = node ../tests/check-http.mjs https://app.editaliza.com.br --expect 200,302 2>&1
if ($LASTEXITCODE -eq 0) {
    Write-Log "‚úÖ Servidor de produ√ß√£o acess√≠vel"
} else {
    Write-Log "‚ùå Servidor de produ√ß√£o inacess√≠vel!" "ERROR"
    exit 1
}

# Teste inicial completo
Write-Log "Executando teste completo de produ√ß√£o..."
$testOutput = node test-production.mjs 2>&1
$testExitCode = $LASTEXITCODE

if ($testExitCode -eq 0) {
    Write-Log "‚úÖ TODOS OS TESTES PASSARAM! Sistema 100% funcional."
    if ($Monitor) {
        Write-Log "Entrando em modo monitoramento..."
        while ($true) {
            Start-Sleep -Seconds 300
            $monitorResult = node test-production.mjs 2>&1
            if ($LASTEXITCODE -ne 0) {
                Write-Log "‚ö†Ô∏è Problema detectado no monitoramento!" "WARN"
                break
            }
            Write-Log "‚úÖ Monitoramento OK"
        }
    }
    exit 0
}

Write-Log "‚ùå Problemas detectados. Iniciando processo de corre√ß√£o..." "WARN"

if ($TestOnly) {
    Write-Log "Modo teste apenas. N√£o ser√£o feitas corre√ß√µes."
    exit 1
}

# Loop de corre√ß√£o
for ($i = 1; $i -le $MaxIterations; $i++) {
    Write-Log "========================================="
    Write-Log "üìä ITERA√á√ÉO $i/$MaxIterations"
    Write-Log "========================================="
    
    # Chamar o orchestrator Node.js
    Write-Log "Executando orchestrator..."
    $orchestratorResult = node orchestrator-production.mjs 2>&1
    
    if ($LASTEXITCODE -eq 0) {
        Write-Log "‚úÖ Orchestrator completou com sucesso"
    } else {
        Write-Log "‚ö†Ô∏è Orchestrator reportou problemas" "WARN"
    }
    
    # Se modo deploy, fazer deploy autom√°tico
    if ($Deploy) {
        Write-Log "Iniciando deploy autom√°tico..."
        
        # Git add, commit e push
        git add . 2>&1 | Out-Null
        git commit -m "fix: auto-corre√ß√£o by orchestrator - itera√ß√£o $i" 2>&1 | Out-Null
        git push origin main 2>&1 | Out-Null
        
        if ($LASTEXITCODE -eq 0) {
            Write-Log "‚úÖ Push para GitHub conclu√≠do"
        } else {
            Write-Log "‚ö†Ô∏è Falha no push para GitHub" "WARN"
        }
        
        # Deploy no servidor
        Write-Log "Fazendo deploy no servidor..."
        ssh root@161.35.127.123 'cd /root/editaliza; git pull; npm install --production; pm2 restart editaliza-app' 2>&1 | Out-Null
        
        if ($LASTEXITCODE -eq 0) {
            Write-Log "‚úÖ Deploy no servidor conclu√≠do"
        } else {
            Write-Log "‚ùå Falha no deploy" "ERROR"
        }
        
        # Aguardar servidor reiniciar
        Write-Log "Aguardando servidor reiniciar (30s)..."
        Start-Sleep -Seconds 30
    }
    
    # Testar novamente
    Write-Log "Testando produ√ß√£o novamente..."
    $retestOutput = node test-production.mjs 2>&1
    
    if ($LASTEXITCODE -eq 0) {
        Write-Log "========================================="
        Write-Log "üéâ SUCESSO! TODOS OS TESTES PASSARAM!"
        Write-Log "Sistema 100% funcional ap√≥s $i itera√ß√µes"
        Write-Log "========================================="
        exit 0
    }
    
    Write-Log "Ainda h√° problemas. Continuando..." "WARN"
    
    # Aguardar antes da pr√≥xima itera√ß√£o
    if ($i -lt $MaxIterations) {
        Write-Log "Aguardando 60 segundos antes da pr√≥xima itera√ß√£o..."
        Start-Sleep -Seconds 60
    }
}

Write-Log ("=" * 41)
Write-Log "LIMITE DE ITERACOES ATINGIDO" "WARN"
Write-Log "Sistema ainda com problemas apos $MaxIterations tentativas"
Write-Log "Verifique os logs em: $LogDir"
Write-Log ("=" * 41)
exit 1