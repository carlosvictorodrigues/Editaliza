#!/usr/bin/env node

require('dotenv').config();
const emailService = require('./src/services/emailService');

async function checkEmailConfig() {
    console.log('üîç VERIFICANDO CONFIGURA√á√ÉO DE EMAIL\n');
    
    // Mostrar vari√°veis de ambiente
    console.log('üìã VARI√ÅVEIS DE AMBIENTE:');
    console.log('EMAIL_HOST:', process.env.EMAIL_HOST || 'N√ÉO DEFINIDO');
    console.log('EMAIL_PORT:', process.env.EMAIL_PORT || 'N√ÉO DEFINIDO');
    console.log('EMAIL_USER:', process.env.EMAIL_USER ? `${process.env.EMAIL_USER.substring(0, 3)}****` : 'N√ÉO DEFINIDO');
    console.log('EMAIL_PASS:', process.env.EMAIL_PASS ? `${process.env.EMAIL_PASS.substring(0, 4)}****` : 'N√ÉO DEFINIDO');
    
    // Verificar status do servi√ßo
    console.log('\nüìß STATUS DO EMAIL SERVICE:');
    const status = emailService.getStatus();
    console.log('Configurado:', status.configured);
    console.log('Pronto:', status.ready);
    console.log('Provider:', status.provider);
    console.log('Host:', status.host);
    console.log('Port:', status.port);
    console.log('User:', status.user);
    
    // Testar conex√£o
    console.log('\nüîó TESTANDO CONEX√ÉO:');
    try {
        const canConnect = await emailService.verifyConnection();
        console.log('Conex√£o OK:', canConnect);
        
        if (canConnect) {
            console.log('\n‚úÖ EMAIL CONFIGURADO E FUNCIONANDO!');
            console.log('O pr√≥ximo webhook CACKTO enviar√° emails reais.');
        } else {
            console.log('\n‚ö†Ô∏è  EMAIL CONFIGURADO MAS COM PROBLEMA DE CONEX√ÉO');
            console.log('Verifique as credenciais no .env');
        }
    } catch (error) {
        console.log('‚ùå Erro na conex√£o:', error.message);
    }
}

checkEmailConfig();