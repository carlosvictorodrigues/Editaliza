# =========================================
# DOCKER COMPOSE - PRODUÇÃO
# =========================================
version: '3.8'

services:
  # === APLICAÇÃO PRINCIPAL ===
  editaliza-app:
    build:
      context: .
      dockerfile: Dockerfile
      target: runner
      args:
        - NODE_VERSION=18-alpine
        - APP_USER=editaliza
        - APP_UID=1001
        - APP_GID=1001
    image: editaliza:latest
    container_name: editaliza-prod
    restart: unless-stopped
    ports:
      - "${PORT:-3000}:3000"
    environment:
      - NODE_ENV=production
      - NODE_OPTIONS=--max-old-space-size=1536
      - PORT=${PORT:-3000}
      - HOST=0.0.0.0
      - DATABASE_PATH=/app/data/db.sqlite
      - UPLOADS_DIR=/app/uploads
      - SESSION_STORE_PATH=/app/data/sessions.db
      - TZ=${TIMEZONE:-America/Sao_Paulo}
    env_file:
      - .env.prod
    volumes:
      # Dados persistentes (PRODUÇÃO)
      - type: volume
        source: editaliza_data_prod
        target: /app/data
      - type: volume
        source: editaliza_uploads_prod
        target: /app/uploads
      - type: volume
        source: editaliza_logs_prod
        target: /app/logs
    networks:
      - editaliza-prod-network
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:${PORT:-3000}/health', (res) => process.exit(res.statusCode === 200 ? 0 : 1)).on('error', () => process.exit(1))"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    depends_on:
      editaliza-migrate:
        condition: service_completed_successfully
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    security_opt:
      - no-new-privileges:true
    read_only: false
    tmpfs:
      - /tmp:rw,noexec,nosuid,size=100m
    deploy:
      resources:
        limits:
          memory: 1792M
          cpus: '1.0'
        reservations:
          memory: 512M
          cpus: '0.5'

  # === SERVIÇO DE MIGRAÇÃO ===
  editaliza-migrate:
    build:
      context: .
      dockerfile: Dockerfile
      target: runner
    container_name: editaliza-migrate-prod
    environment:
      - NODE_ENV=production
      - DATABASE_PATH=/app/data/db.sqlite
    env_file:
      - .env.prod
    volumes:
      - editaliza_data_prod:/app/data
    networks:
      - editaliza-prod-network
    command: ["node", "-e", "console.log('Production database initialization completed')"]
    restart: "no"

  # === NGINX REVERSE PROXY (OPCIONAL) ===
  nginx:
    image: nginx:alpine
    container_name: editaliza-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - editaliza_logs_prod:/var/log/nginx
    networks:
      - editaliza-prod-network
    depends_on:
      - editaliza-app
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    deploy:
      resources:
        limits:
          memory: 128M
          cpus: '0.2'
    profiles:
      - nginx

  # === MONITORAMENTO (OPCIONAL) ===
  watchtower:
    image: containrrr/watchtower
    container_name: editaliza-watchtower
    restart: unless-stopped
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - WATCHTOWER_CLEANUP=true
      - WATCHTOWER_POLL_INTERVAL=3600
      - WATCHTOWER_INCLUDE_STOPPED=true
    command: editaliza-prod
    profiles:
      - monitoring

# === VOLUMES PERSISTENTES PRODUÇÃO ===
volumes:
  editaliza_data_prod:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${DATA_PATH:-./data}
  editaliza_uploads_prod:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${UPLOADS_PATH:-./uploads}
  editaliza_logs_prod:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${LOGS_PATH:-./logs}

# === REDES PRODUÇÃO ===
networks:
  editaliza-prod-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16