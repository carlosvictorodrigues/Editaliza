// Script para verificar se as vari√°veis de ambiente est√£o configuradas
require('dotenv').config();

console.log('=== VERIFICA√á√ÉO DE CONFIGURA√á√ÉO DO GOOGLE OAUTH ===\n');

// Verificar vari√°veis essenciais
const essentialVars = [
    'GOOGLE_CLIENT_ID',
    'GOOGLE_CLIENT_SECRET',
    'GOOGLE_CALLBACK_URL',
    'JWT_SECRET',
    'SESSION_SECRET'
];

let allConfigured = true;

essentialVars.forEach(varName => {
    const value = process.env[varName];
    if (value) {
        // Mostra apenas parte do valor por seguran√ßa
        const displayValue = value.length > 10 
            ? value.substring(0, 10) + '...' + (value.includes('.apps.googleusercontent.com') ? '.apps.googleusercontent.com' : '')
            : value;
        console.log(`‚úÖ ${varName}: Configurado (${displayValue})`);
    } else {
        console.log(`‚ùå ${varName}: N√ÉO configurado`);
        allConfigured = false;
    }
});

console.log('\n=== RESULTADO ===');
if (allConfigured) {
    console.log('‚úÖ Todas as vari√°veis essenciais est√£o configuradas!');
    console.log('üìå O Google OAuth deve funcionar corretamente.');
    console.log('\n‚ö†Ô∏è  IMPORTANTE: Voc√™ precisa REINICIAR o servidor para as mudan√ßas terem efeito!');
    console.log('   1. Pare o servidor atual (Ctrl+C)');
    console.log('   2. Inicie novamente: npm start');
} else {
    console.log('‚ùå Algumas vari√°veis n√£o est√£o configuradas.');
    console.log('üìù Verifique o arquivo .env e adicione as vari√°veis faltantes.');
    console.log('\nExemplo de configura√ß√£o:');
    console.log('GOOGLE_CLIENT_ID=seu_id_aqui.apps.googleusercontent.com');
    console.log('GOOGLE_CLIENT_SECRET=seu_secret_aqui');
    console.log('GOOGLE_CALLBACK_URL=http://localhost:3000/auth/google/callback');
}

// Verificar formato do GOOGLE_CLIENT_ID
if (process.env.GOOGLE_CLIENT_ID) {
    if (!process.env.GOOGLE_CLIENT_ID.includes('.apps.googleusercontent.com')) {
        console.log('\n‚ö†Ô∏è  AVISO: GOOGLE_CLIENT_ID deve terminar com .apps.googleusercontent.com');
    }
}

// Verificar URL de callback
if (process.env.GOOGLE_CALLBACK_URL) {
    console.log(`\nüìç URL de Callback configurada: ${process.env.GOOGLE_CALLBACK_URL}`);
    if (!process.env.GOOGLE_CALLBACK_URL.includes('/auth/google/callback')) {
        console.log('‚ö†Ô∏è  AVISO: A URL de callback deve terminar com /auth/google/callback');
    }
}

process.exit(0);