#!/bin/bash

# Script para corrigir problema de sess√£o perdida no OAuth
# Problema: "OAuthSessionLost" - sess√£o n√£o persiste entre in√≠cio e callback

echo "üîß Iniciando corre√ß√£o de sess√£o OAuth..."

# 1. Verificar se oauthController.js j√° tem fallback cookies
echo "üìù Verificando implementa√ß√£o atual do OAuth..."
if grep -q "oauth_state.*cookie" /root/editaliza/src/controllers/oauthController.js; then
    echo "‚úÖ Fallback cookies j√° implementados no oauthController.js"
else
    echo "‚ùå Fallback cookies n√£o encontrados. Atualizando oauthController.js..."
    
    # Fazer backup do arquivo atual
    cp /root/editaliza/src/controllers/oauthController.js /root/editaliza/src/controllers/oauthController.js.backup
    
    echo "üìù Aplicando corre√ß√µes no oauthController.js..."
    # A atualiza√ß√£o j√° foi feita localmente e enviada via scp
fi

# 2. Verificar configura√ß√£o de cookies no server.js
echo "üìù Verificando configura√ß√£o de sess√£o no server.js..."
if grep -q "sameSite.*none" /root/editaliza/server.js; then
    echo "‚úÖ Configura√ß√£o de cookies j√° permite cross-site (sameSite: 'none')"
else
    echo "‚ö†Ô∏è Configura√ß√£o de cookies pode estar bloqueando OAuth cross-site"
fi

# 3. Verificar e criar pasta de sess√µes se n√£o existir
echo "üìù Verificando pasta de sess√µes..."
if [ ! -d "/root/editaliza/sessions" ]; then
    mkdir -p /root/editaliza/sessions
    echo "‚úÖ Pasta de sess√µes criada"
fi

# 4. Verificar permiss√µes da pasta de sess√µes
chmod 755 /root/editaliza/sessions
echo "‚úÖ Permiss√µes da pasta de sess√µes ajustadas"

# 5. Limpar sess√µes antigas que podem estar corrompidas
echo "üßπ Limpando sess√µes antigas..."
if [ -f "/root/editaliza/sessions.db" ]; then
    rm -f /root/editaliza/sessions.db
    echo "‚úÖ Banco de sess√µes limpo"
fi

# 6. Verificar configura√ß√£o do Nginx
echo "üìù Verificando configura√ß√£o do Nginx para OAuth..."
nginx_config="/etc/nginx/sites-available/editaliza"

if [ -f "$nginx_config" ]; then
    if grep -q "location /auth/google" "$nginx_config"; then
        echo "‚úÖ Configura√ß√£o espec√≠fica para OAuth encontrada no Nginx"
    else
        echo "‚ö†Ô∏è Configura√ß√£o espec√≠fica para OAuth n√£o encontrada no Nginx"
        echo "   Recomendado adicionar configura√ß√£o espec√≠fica para /auth/google/*"
    fi
fi

# 7. Verificar vari√°veis de ambiente necess√°rias
echo "üìù Verificando vari√°veis de ambiente..."
if [ -f "/root/editaliza/.env" ]; then
    if grep -q "GOOGLE_CLIENT_ID" /root/editaliza/.env; then
        echo "‚úÖ Google OAuth configurado no .env"
    else
        echo "‚ùå Google OAuth n√£o configurado no .env"
    fi
    
    if grep -q "SESSION_SECRET" /root/editaliza/.env; then
        echo "‚úÖ SESSION_SECRET configurado"
    else
        echo "‚ö†Ô∏è SESSION_SECRET n√£o encontrado - usando valor padr√£o"
    fi
fi

# 8. Reiniciar aplica√ß√£o com PM2
echo "üîÑ Reiniciando aplica√ß√£o..."
cd /root/editaliza
pm2 restart editaliza-app

# 9. Aguardar aplica√ß√£o iniciar
sleep 3

# 10. Verificar status
echo "üìä Verificando status da aplica√ß√£o..."
pm2 status editaliza-app

# 11. Mostrar √∫ltimos logs para verificar se h√° erros
echo "üìã √öltimos logs da aplica√ß√£o:"
pm2 logs editaliza-app --lines 10 --nostream

echo ""
echo "‚úÖ Script de corre√ß√£o OAuth conclu√≠do!"
echo ""
echo "üîç Para testar:"
echo "1. Acesse: https://editaliza.com.br/login.html"
echo "2. Clique em 'Entrar com Google'"
echo "3. Verifique os logs com: pm2 logs editaliza-app"
echo ""
echo "‚ö†Ô∏è Se ainda houver erro 'OAuthSessionLost':"
echo "- Verifique se cookies est√£o sendo aceitos pelo navegador"
echo "- Teste em aba an√¥nima/privada"
echo "- Verifique configura√ß√£o de CORS e cookies no navegador"